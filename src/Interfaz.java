import java.awt.Color;
import java.awt.Dimension;
import java.io.File;
import java.io.IOException;
import java.util.Enumeration;
import java.util.Hashtable;
import javax.swing.JFrame;
import javax.swing.JTextArea;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import static javax.swing.JOptionPane.showInputDialog;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author abv17
 */
public class Interfaz extends javax.swing.JFrame {
    Hashtable<String, Simbolo> tablaSimbolos;
    int fila=1;
    int col=1;
    
    private JFileChooser fc;
    private ManejadorArchivos ma;
    
    public Interfaz() {        
        initComponents();
        update(fila, col);
        fc = new JFileChooser(new File(".").getAbsolutePath());
        fc.setFileFilter(new FileNameExtensionFilter("*.DFN","dfn"));
        
        ma = new ManejadorArchivos();
        
        abrir.setToolTipText("Abrir");
        guardar.setToolTipText("Guardar");
        compilar.setToolTipText("Compilar");
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
//        areaCodigo.setPreferredSize(new Dimension(this.getSize().width, this.getSize().height/2));
        areaCodigo.jTextArea.addCaretListener(new CaretListener(){
            @Override
            public void caretUpdate(CaretEvent ce) {
                JTextArea codigo = (JTextArea)ce.getSource();
                try{
                    int pos =codigo.getCaretPosition();
                    fila=codigo.getLineOfOffset(pos);
                    col = pos-codigo.getLineStartOffset(fila)+1;
                    fila++;
                }catch(Exception e){}
                update(fila, col);
            }
        });
        panelPrincipal.setBackground(Color.LIGHT_GRAY);
        areaCodigo.jTextArea.requestFocus();
    }
    private void update(int fil, int co){
        numFilas.setText(fil+"");
        numCol.setText(co+"");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrolPane1 = new javax.swing.JScrollPane();
        panelPrincipal = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        AreaErrores = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        numFilas = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        numCol = new javax.swing.JLabel();
        abrir = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        compilar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        AreaComponentesL = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        miBuscar = new javax.swing.JMenuItem();
        miBR = new javax.swing.JMenuItem();
	     areaCodigo = new AreaCodigo();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        areaCodigo.jTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                areaCodigoKeyTyped(evt);
            }
        });

        AreaErrores.setEditable(false);
        AreaErrores.setColumns(20);
        AreaErrores.setRows(5);
        jScrollPane2.setViewportView(AreaErrores);

        jLabel2.setText("Fila:");

        jLabel1.setText("Col:");

        abrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/folderopened-amarillo-icono-6397-32.png"))); // NOI18N
        abrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                abrirMouseClicked(evt);
            }
        });

        guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/disquetes-excepto-icono-3849-32.png"))); // NOI18N
        guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guardarMouseClicked(evt);
            }
        });

        compilar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/clicknrun-icono-4776-32.png"))); // NOI18N
        compilar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                compilarMouseClicked(evt);
            }
        });

        AreaComponentesL.setColumns(20);
        AreaComponentesL.setRows(5);
        jScrollPane3.setViewportView(AreaComponentesL);
        jScrolPane1.setViewportView(areaCodigo);

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelPrincipalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrolPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelPrincipalLayout.createSequentialGroup()
                                        .addGap(112, 441, Short.MAX_VALUE)
                                        .addComponent(jLabel2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                                        .addComponent(numFilas, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel1)
                                        .addGap(25, 25, 25)
                                        .addComponent(numCol, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(119, 119, 119))
                                    .addComponent(jScrollPane3)))
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addComponent(abrir, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(compilar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(abrir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(compilar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrolPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numFilas, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(numCol, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenu1.setText("Archivo");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem2.setText("Nuevo");
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Abrir");
        jMenu1.add(jMenuItem3);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Guardar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem5.setText("Guardar como...");
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");

        miBuscar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        miBuscar.setText("Buscar...");
        miBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miBuscarActionPerformed(evt);
            }
        });
        jMenu2.add(miBuscar);

        miBR.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        miBR.setText("Buscar/Remplazar");
        miBR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miBRActionPerformed(evt);
            }
        });
        jMenu2.add(miBR);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    String Alfabeto=("[\\w]*[\\x09]*[\\x20]+[\\x3C]*[\\x3E]*[\\x3D]*[\\x2B]*[\\x2D]*[\\x2F]*[\\x2A]*[\\x3A]*[\\x2C]*[\\x28]*[\\x29]*[\\x5B]*[\\x5D]*[\\x7B]*[\\x7D]*[ñ]*[Ñ]*[á]*[Á]*[é]*[É]*[í]*[Í]*[ó]*[Ó]*[ú]*[Ú]*[\\x7C]*[\\x26]*[\\x25]*[\\x5F]*[\\x5E]*[\\x23]*[\\x3F]*[\\x23]*[\\x22]*[\\x2E]*[\\x20]+");
    String Alfabeto2=("[\\w]*[\\x09]*[\\x20]*[\\x3C]*[\\x3E]*[\\x3D]*[\\x2B]*[\\x2D]*[\\x2F]*[\\x2A]*[\\x3A]*[\\x2C]*[\\x28]*[\\x29]*[\\x5B]*[\\x5D]*[\\x7B]*[\\x7D]*[ñ]*[Ñ]*[á]*[Á]*[é]*[É]*[í]*[Í]*[ó]*[Ó]*[ú]*[Ú]*[\\x7C]*[\\x26]*[\\x25]*[\\x5F]*[\\x5E]*[\\x3F]*[\\xF9]*[\\x2E]*");
    String patron = ("(start\\b|end\\b|natural\\b|integer\\b|real\\b|function\\b|table\\b|text\\b|bit\\b|infinity\\b|pi\\b|euler\\b|if\\b|else\\b|during\\b|from\\b|to\\b|do\\b|terminal\\b|expression\\b|thread\\b|main\\b|convertion\\b|call\\b|In\\b|Out\\b|Grhapic\\b)|"
            + "([:][:]|<=|>=|<|>|[=][?])|" //operador relacional
            + "([-][=]|[+][=]|[/][=]|[*][=]|[=])|" //operador de asignacion
            + "([a-zA-Z]+[a-zA-Z_0-9]*)|" //identificador
            + "([\\x22]["+Alfabeto2+"]*[\\x22][#]["+Alfabeto2+"]+[#][\\x22]["+Alfabeto2+"]+[\\x22]|[\\x22]["+Alfabeto2+"]*[\\x22][#]["+Alfabeto2+"]+)|" //Concatenacion
            + "([\\x22][\\x22])|" //Cadena Vacia
            + "([*][*]["+Alfabeto+"]+)|" //Comentario Simple
            + "([{][["+Alfabeto+"]+[\\x0A]*]+[}])|" //Comentario Largo
            + "([\\x22]["+Alfabeto2+"]+[\\x22])|" //Cadenas
            + "([#]|[\\x22]|[*][*]|[{]|[}])|" //signos especiales
            + "(AND|OR)|" //operador logico
            + "(\\x28|\\x29|\\x5B|\\x5D)|"//signos de agrupacion
            +"([\\x2B|\\x2D]{0,1}[\\d]+[.][\\d]+|\\d+|[\\x2B|\\x2D]{0,1}[\\x2E]{0,1}[\\d]+)|"//numero
            + "([-|/|^|+|*])|"//operador aritmetico
            + "([.|,|;])");//signos de puntuacion
    String[] tipoDato= {"natural","integer","real","text","bit"};
    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // TODO add your handling code here:
        Dimension dim = this.getContentPane().getSize();
        panelPrincipal.setPreferredSize(dim);
    }//GEN-LAST:event_formComponentResized

    private void areaCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_areaCodigoKeyTyped
        // TODO add your handling code here:
//        cad+=evt.getKeyChar();
//        for (int i = 0; i < palRes.length; i++) {
//            if (cad.equals(palRes[i]+" ")) {
//                areaCodigo.setForeground(Color.red);
//                //System.out.println(cad);
//                cad="";
//            }
//        }
    }//GEN-LAST:event_areaCodigoKeyTyped

    private void abrirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_abrirMouseClicked
        int r = fc.showOpenDialog(this);
        if(r == JFileChooser.APPROVE_OPTION){
            String path = fc.getSelectedFile().getPath(); 
            setTitle("Archivo: "+path);
            try{
            areaCodigo.jTextArea.setText(ma.abrir(path));
            }catch(IOException e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_abrirMouseClicked

    private void guardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarMouseClicked
        guardar();
    }//GEN-LAST:event_guardarMouseClicked

    private void compilarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_compilarMouseClicked
        compilar();
    }//GEN-LAST:event_compilarMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        guardar();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        guardar();
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void miBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miBuscarActionPerformed
        VentanaBuscar vb = new VentanaBuscar(this, true,areaCodigo.jTextArea);
        vb.setVisible(true);
    }//GEN-LAST:event_miBuscarActionPerformed

    private void miBRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miBRActionPerformed
        String cb = showInputDialog(this,"Introduzca la palabra a buscar.");
        if(cb == null){return;}
        String nc = showInputDialog(this,"Introduzca la palabra nueva.");
        if(nc == null){return;}
        areaCodigo.jTextArea.setText(areaCodigo.jTextArea.getText().replaceAll(cb,nc));
    }//GEN-LAST:event_miBRActionPerformed

    private int obtLinea(String pb){
        JTextArea c = areaCodigo.jTextArea;
        for(int i = 0;i <= (c.getText().length()-pb.length()) ;i++){
            if(c.getText().substring(i, i+pb.length()).equals(pb)){
                areaCodigo.jTextArea.moveCaretPosition(i);
                return fila;
            }else if((c.getText().substring(i, i+pb.length())).equals(pb.substring(0, pb.length()-1)+"=")){
                areaCodigo.jTextArea.moveCaretPosition(i);
                return fila;
            }
        }
        return fila;
    }
    
    public void compilar(){
        tablaSimbolos = new Hashtable<>();
        String texto = areaCodigo.jTextArea.getText();
        Simbolo simbolo = new Simbolo();
        String nombre = "";
        Pattern p = Pattern.compile(patron);
        Matcher matcher = p.matcher(texto);
        boolean bandera= false;
        String cad = "";

        while (matcher.find()){
            String tokenTipo1 = matcher.group(1);
            if(tokenTipo1 != null){
                cad+="<Palabra Reservada, "+tokenTipo1+">\n";
                for(String tipo:tipoDato){
                    if (tokenTipo1.equals(tipo)) {
                        simbolo.tipo=tokenTipo1;
                    }
                }
            }

            String tokenTipo2 = matcher.group(2);
            if(tokenTipo2 != null){
                cad+="<Operador Relacional, "+tokenTipo2+">\n";
            }

           String tokenTipo3 = matcher.group(3);
            if(tokenTipo3 != null){
                cad+="<Operador de Asignación, "+tokenTipo3+">\n";
                if (!bandera) {
                    bandera=true;
                }
            }
            
            String tokenTipo4 = matcher.group(4);
            if(tokenTipo4 != null){
                cad+="<Identificador, "+tokenTipo4+">\n";
                nombre= tokenTipo4;
                simbolo.fila= obtLinea(" "+tokenTipo4+" ");
            }
            
            String tokenTipo5 = matcher.group(5);
            if(tokenTipo5 != null){
                cad+="<Concatenación, "+tokenTipo5+">\n";
            }
            
            String tokenTipo6 = matcher.group(6);
            if(tokenTipo6 != null){
                cad+="<Cadena Vacia, "+tokenTipo6+">\n";
                simbolo.valor= tokenTipo6;
            }
            
            String tokenTipo7 = matcher.group(7);
            if(tokenTipo7 != null){
                cad+="<Comentario Simple, "+tokenTipo7+">\n";
            }
            
            String tokenTipo8 = matcher.group(8);
            if(tokenTipo8 != null){
                cad+="<Comentario Largo, "+tokenTipo8+">\n";
            }
            
            String tokenTipo9 = matcher.group(9);
            if(tokenTipo9 != null){
                cad+="<Cadena de Texto, "+tokenTipo9+">\n";
                simbolo.valor= tokenTipo9;
            }
            
            String tokenTipo10 = matcher.group(10);
            if(tokenTipo10 != null){
                cad+="<Función Especial, "+tokenTipo10+">\n";
            }
            
            String tokenTipo11 = matcher.group(11);
            if(tokenTipo11 != null){
                cad+="<Operador Lógico, "+tokenTipo11+">\n";
            }

            String tokenTipo12 = matcher.group(12);
            if(tokenTipo12 != null){
                cad+="<Signo de Agrupación, "+tokenTipo12+">\n";
            }
            
            String tokenTipo13 = matcher.group(13);
            if(tokenTipo13 != null){
                cad+="<Número, "+tokenTipo13+">\n";
                if (bandera) {
                    simbolo.valor=tokenTipo13;
                    bandera=false;
                }
            }
            
            String tokenTipo14 = matcher.group(14);
            if(tokenTipo14 != null){
                cad+="<Operador Aritmetico, "+tokenTipo14+">\n";
            }
            
            String tokenTipo15 = matcher.group(15);
            if(tokenTipo15 != null){
                cad+="<Signo de Puntuación, "+tokenTipo15+">\n";
                if (tokenTipo15.equals(";")) {
                    System.out.println(nombre+"     "+simbolo.tipo+"    "+simbolo.valor+"     "+simbolo.fila);
                    if (!tablaSimbolos.containsKey(nombre) && simbolo.tipo!=null) {
                        System.out.println("Insertando elemento...");
                        tablaSimbolos.put(nombre, new Simbolo(simbolo.tipo, simbolo.valor, simbolo.fila));
                        simbolo= new Simbolo();
                    }else{
                        if (simbolo.tipo==null) {
                            System.out.println("Modificando elemento...");
                            tablaSimbolos.get(nombre).valor= simbolo.valor;
                            simbolo =new Simbolo();
                            /*Enumeration e = tablaSimbolos.keys();
                            Simbolo s;
                            while (e.hasMoreElements()){
                                System.out.println("Buscando y comparando "+e.nextElement()+" con "+nombre+" para modificar...");
                                if (((String)e.nextElement()).equals(nombre)) {
                                    System.out.println("Comparando "+e.nextElement()+" con "+nombre+"...");
                                    s = (Simbolo)tablaSimbolos.get((String)e.nextElement());
                                    tablaSimbolos.replace(nombre, s, new Simbolo(s.tipo,simbolo.valor,s.fila));
//                                    tablaSimbolos.get((String)e.nextElement()).valor=simbolo.valor;
                                    System.out.println("Elemento modificado");
                                }
                            }*/
                        }else{
                            //Error por identificador duplicado
                            //AreaErrores.setText("Error, en la linea "+simbolo.fila+" Identificador duplicado");
                            return;
                        }
                    }
                }
            }
        }
        Enumeration elem = tablaSimbolos.elements();
        Simbolo sim;
        while (elem.hasMoreElements()){
            sim = (Simbolo)elem.nextElement();
            System.out.println("Nombre: "+tablaSimbolos.keySet()
                    +"\nTipo: "+sim.tipo
                    +"\nValor: "+sim.valor
                    +"\nFila: "+sim.fila);
        }
        AreaComponentesL.setText(cad);
    }
    
    
    public void guardar(){
        int r = fc.showOpenDialog(this);
        if(r == JFileChooser.APPROVE_OPTION){
            String path = fc.getSelectedFile().getPath()+".dfn"; 
            setTitle("Archivo: "+path);
            try{
                ma.guardar(path, areaCodigo.jTextArea.getText());
            }catch(IOException e){
                e.printStackTrace();
            }
        }  
    }
    
    String cad = "";
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaComponentesL;
    private javax.swing.JTextArea AreaErrores;
    private javax.swing.JButton abrir;
    private AreaCodigo areaCodigo;
    private javax.swing.JButton compilar;
    private javax.swing.JButton guardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrolPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JMenuItem miBR;
    private javax.swing.JMenuItem miBuscar;
    private javax.swing.JLabel numCol;
    private javax.swing.JLabel numFilas;
    private javax.swing.JPanel panelPrincipal;
    // End of variables declaration//GEN-END:variables

}